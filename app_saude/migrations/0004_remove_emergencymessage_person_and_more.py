# Generated by Django 5.2 on 2025-04-25 22:32

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app_saude", "0003_remove_concept_domain_id_remove_person_person_id_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name="emergencymessage",
            name="person",
        ),
        migrations.RemoveField(
            model_name="emergencyprovider",
            name="emergency_message",
        ),
        migrations.RemoveField(
            model_name="emergencyprovider",
            name="provider",
        ),
        migrations.AlterUniqueTogether(
            name="linkedprovider",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="linkedprovider",
            name="person",
        ),
        migrations.RemoveField(
            model_name="linkedprovider",
            name="provider",
        ),
        migrations.RemoveField(
            model_name="providercaresite",
            name="care_site_id",
        ),
        migrations.RemoveField(
            model_name="providercaresite",
            name="provider",
        ),
        migrations.RemoveField(
            model_name="providerconcept",
            name="concept",
        ),
        migrations.RemoveField(
            model_name="providerconcept",
            name="provider",
        ),
        migrations.AlterModelOptions(
            name="caresite",
            options={},
        ),
        migrations.AlterModelOptions(
            name="concept",
            options={},
        ),
        migrations.AlterModelOptions(
            name="domain",
            options={},
        ),
        migrations.AlterModelOptions(
            name="drugexposure",
            options={},
        ),
        migrations.AlterModelOptions(
            name="observation",
            options={},
        ),
        migrations.AlterModelOptions(
            name="person",
            options={},
        ),
        migrations.AlterModelOptions(
            name="provider",
            options={},
        ),
        migrations.AlterModelOptions(
            name="visitoccurrence",
            options={},
        ),
        migrations.AlterModelTableComment(
            name="caresite",
            table_comment="Facilities where care is provided.",
        ),
        migrations.AlterModelTableComment(
            name="concept",
            table_comment="OMOP-compliant table for standardized concepts.",
        ),
        migrations.AlterModelTableComment(
            name="domain",
            table_comment="Domain definitions grouping concepts.",
        ),
        migrations.AlterModelTableComment(
            name="drugexposure",
            table_comment="Records of drug prescriptions or administration.",
        ),
        migrations.AlterModelTableComment(
            name="observation",
            table_comment="Captured patient-reported observations.",
        ),
        migrations.AlterModelTableComment(
            name="person",
            table_comment="Represents an individual user who is a patient.",
        ),
        migrations.AlterModelTableComment(
            name="provider",
            table_comment="Healthcare providers in OMOP.",
        ),
        migrations.AlterModelTableComment(
            name="visitoccurrence",
            table_comment="Interactions between patients and healthcare providers.",
        ),
        migrations.RemoveField(
            model_name="caresite",
            name="location_id",
        ),
        migrations.RemoveField(
            model_name="observation",
            name="value_as_text",
        ),
        migrations.RemoveField(
            model_name="person",
            name="biological_sex",
        ),
        migrations.RemoveField(
            model_name="person",
            name="birth",
        ),
        migrations.RemoveField(
            model_name="person",
            name="gender_identity",
        ),
        migrations.RemoveField(
            model_name="person",
            name="height",
        ),
        migrations.RemoveField(
            model_name="person",
            name="id",
        ),
        migrations.RemoveField(
            model_name="person",
            name="weight",
        ),
        migrations.RemoveField(
            model_name="provider",
            name="professional_email",
        ),
        migrations.RemoveField(
            model_name="visitoccurrence",
            name="care_site_id",
        ),
        migrations.RemoveField(
            model_name="visitoccurrence",
            name="visit_date",
        ),
        migrations.AddField(
            model_name="caresite",
            name="place_of_service_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Place of Service Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_saude.concept",
            ),
        ),
        migrations.AddField(
            model_name="concept",
            name="concept_class_id",
            field=models.CharField(blank=True, db_comment="Class of the concept", max_length=20, null=True),
        ),
        migrations.AddField(
            model_name="concept",
            name="concept_code",
            field=models.CharField(
                blank=True,
                db_comment="Code of the concept in source vocabulary",
                max_length=50,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="concept",
            name="valid_start_date",
            field=models.DateField(blank=True, db_comment="Start date of concept validity", null=True),
        ),
        migrations.AddField(
            model_name="concept",
            name="valide_end_date",
            field=models.DateField(blank=True, db_comment="End date of concept validity", null=True),
        ),
        migrations.AddField(
            model_name="domain",
            name="domain_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Reference to Concept representing the domain",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="domain_concept_set",
                to="app_saude.concept",
            ),
        ),
        migrations.AddField(
            model_name="drugexposure",
            name="drug_type_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Drug Type Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="drug_type_concept_set",
                to="app_saude.concept",
            ),
        ),
        migrations.AddField(
            model_name="observation",
            name="observation_type_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Observation Type Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="observation_type_concept_set",
                to="app_saude.concept",
            ),
        ),
        migrations.AddField(
            model_name="observation",
            name="provider",
            field=models.ForeignKey(
                blank=True,
                db_comment="Provider attending the visit",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_saude.provider",
            ),
        ),
        migrations.AddField(
            model_name="observation",
            name="value_as_string",
            field=models.CharField(blank=True, db_comment="Free-text value", max_length=60, null=True),
        ),
        migrations.AddField(
            model_name="person",
            name="birth_datetime",
            field=models.DateTimeField(blank=True, db_comment="Date and time of birth", null=True),
        ),
        migrations.AddField(
            model_name="person",
            name="ethnicity_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Ethnicity Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="person_ethnicity_concept_set",
                to="app_saude.concept",
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="gender_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Gender Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="person_gender_concept_set",
                to="app_saude.concept",
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="person_id",
            field=models.AutoField(db_comment="Primary key of Person", primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name="person",
            name="year_of_birth",
            field=models.IntegerField(blank=True, db_comment="Year of birth", null=True),
        ),
        migrations.AddField(
            model_name="provider",
            name="birth_datetime",
            field=models.DateTimeField(blank=True, db_comment="Date and time of birth", null=True),
        ),
        migrations.AddField(
            model_name="provider",
            name="care_site",
            field=models.ForeignKey(
                blank=True,
                db_comment="Reference to Care Site",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_saude.caresite",
            ),
        ),
        migrations.AddField(
            model_name="provider",
            name="specialty_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Specialty Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_saude.concept",
            ),
        ),
        migrations.AddField(
            model_name="visitoccurrence",
            name="care_site",
            field=models.ForeignKey(
                blank=True,
                db_comment="Care Site location",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_saude.caresite",
            ),
        ),
        migrations.AddField(
            model_name="visitoccurrence",
            name="visit_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Visit Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="vistit_concept_set",
                to="app_saude.concept",
            ),
        ),
        migrations.AddField(
            model_name="visitoccurrence",
            name="visit_start_date",
            field=models.DateTimeField(blank=True, db_comment="Visit start date and time", null=True),
        ),
        migrations.AddField(
            model_name="visitoccurrence",
            name="visit_type_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Visit Type Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="visit_type_concept_set",
                to="app_saude.concept",
            ),
        ),
        migrations.AlterField(
            model_name="caresite",
            name="care_site_id",
            field=models.AutoField(db_comment="Primary key of Care Site", primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="caresite",
            name="care_site_name",
            field=models.CharField(
                blank=True,
                db_comment="Name of the Care Site",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="caresite",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_comment="Creation timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="caresite",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True,
                db_comment="Update timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="concept",
            name="concept_id",
            field=models.AutoField(db_comment="Primary key of Concept", primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="concept",
            name="concept_name",
            field=models.CharField(blank=True, db_comment="Name of the concept", max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name="concept",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_comment="Creation timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="concept",
            name="domain",
            field=models.ForeignKey(
                blank=True,
                db_comment="Reference to Domain",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="concept_domain_set",
                to="app_saude.domain",
            ),
        ),
        migrations.AlterField(
            model_name="concept",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True,
                db_comment="Update timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="domain",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_comment="Creation timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="domain",
            name="domain_id",
            field=models.AutoField(db_comment="Primary key of Domain", primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="domain",
            name="domain_name",
            field=models.CharField(blank=True, db_comment="Name of the domain", max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name="domain",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True,
                db_comment="Update timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_comment="Creation timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="dose_times",
            field=models.TextField(blank=True, db_comment="Scheduled dose times", null=True),
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="drug_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Drug Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="drug_concept_set",
                to="app_saude.concept",
            ),
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="drug_exposure_end_date",
            field=models.DateField(blank=True, db_comment="End date of drug exposure", null=True),
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="drug_exposure_id",
            field=models.AutoField(
                db_comment="Primary key of Drug Exposure",
                primary_key=True,
                serialize=False,
            ),
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="drug_exposure_start_date",
            field=models.DateField(blank=True, db_comment="Start date of drug exposure", null=True),
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="interval_hours",
            field=models.IntegerField(blank=True, db_comment="Interval between doses in hours", null=True),
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="person",
            field=models.ForeignKey(
                blank=True,
                db_comment="Patient receiving the drug",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_saude.person",
            ),
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="quantity",
            field=models.IntegerField(blank=True, db_comment="Quantity administered", null=True),
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="sig",
            field=models.TextField(blank=True, db_comment="Free-text dosage instructions", null=True),
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="stop_reason",
            field=models.CharField(
                blank=True,
                db_comment="Reason for stopping medication",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="drugexposure",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True,
                db_comment="Update timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="observation",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_comment="Creation timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="observation",
            name="observation_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Observation Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="observation_concept_set",
                to="app_saude.concept",
            ),
        ),
        migrations.AlterField(
            model_name="observation",
            name="observation_date",
            field=models.DateTimeField(blank=True, db_comment="Date and time of observation", null=True),
        ),
        migrations.AlterField(
            model_name="observation",
            name="observation_id",
            field=models.AutoField(
                db_comment="Primary key of Observation",
                primary_key=True,
                serialize=False,
            ),
        ),
        migrations.AlterField(
            model_name="observation",
            name="person",
            field=models.ForeignKey(
                blank=True,
                db_comment="Patient linked to the observation",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_saude.person",
            ),
        ),
        migrations.AlterField(
            model_name="observation",
            name="shared_with_provider",
            field=models.BooleanField(blank=True, db_comment="Visibility to assigned provider", null=True),
        ),
        migrations.AlterField(
            model_name="observation",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True,
                db_comment="Update timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="observation",
            name="value_as_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Value as Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="observation_value_as_concept_set",
                to="app_saude.concept",
            ),
        ),
        migrations.AlterField(
            model_name="person",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_comment="Creation timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="person",
            name="race_concept",
            field=models.ForeignKey(
                blank=True,
                db_comment="Race Concept",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="person_racer_concept_set",
                to="app_saude.concept",
            ),
        ),
        migrations.AlterField(
            model_name="person",
            name="social_name",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name="person",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True,
                db_comment="Update timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="person",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="provider",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_comment="Creation timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="provider",
            name="professional_registration",
            field=models.IntegerField(blank=True, db_comment="Professional registration number", null=True),
        ),
        migrations.AlterField(
            model_name="provider",
            name="provider_id",
            field=models.AutoField(db_comment="Primary key of Provider", primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="provider",
            name="social_name",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name="provider",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True,
                db_comment="Update timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="provider",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="visitoccurrence",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_comment="Creation timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="visitoccurrence",
            name="observations",
            field=models.TextField(blank=True, db_comment="Summary notes of the visit", null=True),
        ),
        migrations.AlterField(
            model_name="visitoccurrence",
            name="person",
            field=models.ForeignKey(
                blank=True,
                db_comment="Patient involved in the visit",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_saude.person",
            ),
        ),
        migrations.AlterField(
            model_name="visitoccurrence",
            name="provider",
            field=models.ForeignKey(
                blank=True,
                db_comment="Provider attending the visit",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_saude.provider",
            ),
        ),
        migrations.AlterField(
            model_name="visitoccurrence",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True,
                db_comment="Update timestamp",
                default=django.utils.timezone.now,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="visitoccurrence",
            name="visit_end_date",
            field=models.DateTimeField(blank=True, db_comment="Visit end date and time", null=True),
        ),
        migrations.AlterField(
            model_name="visitoccurrence",
            name="visit_occurrence_id",
            field=models.AutoField(
                db_comment="Primary key of Visit Occurrence",
                primary_key=True,
                serialize=False,
            ),
        ),
        migrations.CreateModel(
            name="ConceptClass",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_comment="Creation timestamp"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, db_comment="Update timestamp"),
                ),
                (
                    "concept_class_id",
                    models.CharField(
                        db_comment="Primary key of Concept Class",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "concept_class_name",
                    models.CharField(
                        blank=True,
                        db_comment="Name of the Concept Class",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "concept_class_concept",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Reference to Concept representing the Concept Class",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_saude.concept",
                    ),
                ),
            ],
            options={
                "db_table": "concept_class",
                "db_table_comment": "Concept class categorization in OMOP.",
            },
        ),
        migrations.CreateModel(
            name="ConceptSynonym",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_comment="Creation timestamp"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, db_comment="Update timestamp"),
                ),
                (
                    "concept_synonym_name",
                    models.CharField(
                        blank=True,
                        db_comment="Synonym name",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "concept",
                    models.ForeignKey(
                        db_comment="Reference to Concept",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="concept_synonym_concept_set",
                        to="app_saude.concept",
                    ),
                ),
                (
                    "language_concept",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Language Concept of the synonym",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="concept_synonym_language_concept_set",
                        to="app_saude.concept",
                    ),
                ),
            ],
            options={
                "db_table": "concept_synonym",
                "db_table_comment": "Synonyms for concepts in OMOP.",
            },
        ),
        migrations.CreateModel(
            name="FactRelationship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_comment="Creation timestamp"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, db_comment="Update timestamp"),
                ),
                ("fact_id_1", models.IntegerField(db_comment="ID of first fact")),
                ("fact_id_2", models.IntegerField(db_comment="ID of second fact")),
                (
                    "domain_concept_id_1",
                    models.ForeignKey(
                        db_comment="Domain Concept of first fact",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="factrel_domain_concept_1_set",
                        to="app_saude.concept",
                    ),
                ),
                (
                    "domain_concept_id_2",
                    models.ForeignKey(
                        db_comment="Domain Concept of second fact",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="factrel_domain_concept_2_set",
                        to="app_saude.concept",
                    ),
                ),
                (
                    "relationship_concept",
                    models.ForeignKey(
                        db_comment="Type of relationship Concept",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="factrel_relationship_concept_set",
                        to="app_saude.concept",
                    ),
                ),
            ],
            options={
                "db_table": "fact_relationship",
                "db_table_comment": "Relates different entities (facts) within OMOP.",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_comment="Creation timestamp"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, db_comment="Update timestamp"),
                ),
                (
                    "location_id",
                    models.AutoField(
                        db_comment="Primary key of Location",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "address_1",
                    models.CharField(
                        blank=True,
                        db_comment="Street and number",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "address_2",
                    models.CharField(blank=True, db_comment="Complement", max_length=50, null=True),
                ),
                (
                    "city",
                    models.CharField(blank=True, db_comment="City", max_length=255, null=True),
                ),
                (
                    "state",
                    models.CharField(blank=True, db_comment="State", max_length=255, null=True),
                ),
                (
                    "zip",
                    models.CharField(blank=True, db_comment="Postal code", max_length=20, null=True),
                ),
                (
                    "country_concept",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Country Concept",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_saude.concept",
                    ),
                ),
            ],
            options={
                "db_table": "location",
                "db_table_comment": "Stores geographical locations (address information).",
            },
        ),
        migrations.AddField(
            model_name="caresite",
            name="location",
            field=models.ForeignKey(
                blank=True,
                db_comment="Location of Care Site",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_saude.location",
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="location",
            field=models.ForeignKey(
                blank=True,
                db_comment="Location of residence",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_saude.location",
            ),
        ),
        migrations.CreateModel(
            name="Measurement",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_comment="Creation timestamp"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, db_comment="Update timestamp"),
                ),
                (
                    "measurement_id",
                    models.AutoField(
                        db_comment="Primary key of Measurement",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "measurement_date",
                    models.DateTimeField(blank=True, db_comment="Date and time of measurement", null=True),
                ),
                (
                    "measurement_concept",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Measurement Concept",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="measurement_concept_set",
                        to="app_saude.concept",
                    ),
                ),
                (
                    "measurement_type_concept",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Measurement Type Concept",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="measurement_type_concept_set",
                        to="app_saude.concept",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Patient linked to the measurement",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_saude.person",
                    ),
                ),
            ],
            options={
                "db_table": "measurement",
                "db_table_comment": "Measurements taken on persons (e.g., height, weight, labs).",
            },
        ),
        migrations.CreateModel(
            name="Vocabulary",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_comment="Creation timestamp"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, db_comment="Update timestamp"),
                ),
                (
                    "vocabulary_id",
                    models.CharField(
                        db_comment="Primary key of Vocabulary",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "vocabulary_name",
                    models.CharField(
                        blank=True,
                        db_comment="Name of the vocabulary",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "vocabulary_concept",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Reference to Concept representing the vocabulary",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_saude.concept",
                    ),
                ),
            ],
            options={
                "db_table": "vocabulary",
                "db_table_comment": "Vocabulary definitions in OMOP.",
            },
        ),
        migrations.DeleteModel(
            name="Address",
        ),
        migrations.DeleteModel(
            name="Emergencymessage",
        ),
        migrations.DeleteModel(
            name="EmergencyProvider",
        ),
        migrations.DeleteModel(
            name="LinkedProvider",
        ),
        migrations.DeleteModel(
            name="ProviderCareSite",
        ),
        migrations.DeleteModel(
            name="ProviderConcept",
        ),
        migrations.AddIndex(
            model_name="conceptsynonym",
            index=models.Index(fields=["concept"], name="idx_concept_synonym_id"),
        ),
        migrations.AlterUniqueTogether(
            name="factrelationship",
            unique_together={("fact_id_1", "fact_id_2", "relationship_concept_id")},
        ),
    ]
