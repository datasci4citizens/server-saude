Project saude_mental_database {
  database_type: "PostgreSQL"
}

Table user {
  user_id int [pk, increment]
  first_name varchar(255) [note: "User's given name"]
  last_name varchar(255) [note: "User's family name"]
  email varchar [unique, note: "Login email, must be unique"]
  is_active boolean [note: "Indicates if the user account is active"]

  Note: "Generic authentication table, used by both patients (Person) and professionals (Provider)."
}

Table address {
  address_id int [pk, increment]
  person_id int [ref: > person.person_id]
  street varchar(255)
  number varchar(10)
  complement varchar(255)
  neighborhood varchar(255)
  city varchar(100)
  state varchar(50)
  postal_code varchar(20)

  Note: "Stores residential address for a person."
}

Table domain {
  domain_id int [pk, increment]
  domain_name varchar(255)
  created_at timestamp(6)
  updated_at timestamp(6)

  Note: "Reference table for organizing types of concepts."
}

Table concept {
  concept_id int [pk, increment]
  concept_name varchar(255) [note: "Name of the concept (e.g. 'Feminino', 'Tomar remédio')"]
  domain_id int [ref: - domain.domain_id, note: "Categorization of concept purpose (e.g. 'gender', 'observation_type')"]
  created_at timestamp(6)
  updated_at timestamp(6)

  Note: "OMOP-compliant table for storing standardized values and custom entries such as habits, tasks, and symptoms."
}

Table care_site {
  care_site_id int [pk, increment]
  care_site_name varchar(255)
  location_id int
  created_at timestamp(6)
  updated_at timestamp(6)

  Note: "Healthcare facility or unit where a provider may be associated. Currently not used in UI, but useful for future multi-site features."
}

Table provider {
  provider_id int [pk, note: "Primary key of the Provider table"]
  user_id int [ref: - user.user_id, note: "Reference to the base User entity"]
  social_name varchar(255) [null, note: "Optional name used in social or professional contexts"]
  professional_email varchar [unique, null, note: "Official work email address of the provider"]
  professional_registration int [note: "Registration number in official professional board (e.g. CRM, CRP, COREN)"]
  created_at timestamp(6) [note: "Record creation timestamp"]
  updated_at timestamp(6) [note: "Last update timestamp"]

  Note: "Represents a healthcare professional, such as a Community Health Agent (ACS), psychologist, or psychiatrist. Each provider is linked to a User account and may interact with multiple patients through LinkedProvider."
}

Table provider_care_site {
  provider_id int [ref: > provider.provider_id]
  careSite_id int [ref: > care_site.care_site_id]

  Note: "Many-to-many relation between providers and care sites."
}

Table provider_concept {
  provider_id int [ref: > provider.provider_id]
  concept_id int [ref: > concept.concept_id]

  Note: "Represents provider specialities or roles via concepts (e.g. 'Psicólogo')."
}

Table person {
  person_id int [pk, note: "Primary key of the Person table"]
  user_id int [ref: - user.user_id, note: "Reference to the base User entity"]
  social_name varchar(255) [null, note: "Optional name used by the person in social or preferred contexts"]
  birth date [note: "Date of birth"]
  height float [note: "Height in meters (or preferred unit)"]
  weight float [note: "Weight in kilograms (or preferred unit)"]
  biological_sex_id int [ref: > concept.concept_id, null, note: "Biological sex as a reference to Concept (e.g. Male, Female)"]
  gender_identity_id int [ref: > concept.concept_id, null, note: "Self-declared gender identity as Concept (e.g. Non-binary)"]
  race_concept_id int [ref: > concept.concept_id, null, note: "Self-declared race/ethnicity as Concept"]
  created_at timestamp(6) [note: "Record creation timestamp"]
  updated_at timestamp(6) [note: "Last update timestamp"]

  Note: "Represents an individual user who is a patient in the system. Each person is linked to a base User account and may optionally declare social identifiers, demographics, and physical attributes. Compatible with OMOP conventions for population-based data."
}

Table linked_provider {
  linked_provider_id int [pk, increment]
  person_id int [ref: > person.person_id]
  provider_id int [ref: > provider.provider_id]

  Note: "Links patients to providers. Enables shared visibility of patient data."
}

Table observation {
  observation_id int [pk, increment]
  person_id int [ref: > person.person_id, note: "Patient who made or received the observation"]
  observation_concept_id int [ref: > concept.concept_id, null, note: "What is being observed (e.g., mood, symptom, task)"]
  value_as_concept_id int [ref: > concept.concept_id, null, note: "Recorded answer, when categorical (e.g., 'Sad', '4 times')"]
  value_as_text text [null, note: "Free-text input (e.g. diary, thought, notes)"]
  observation_date timestamp(6) [note: "When the observation occurred"]
  shared_with_provider boolean [note: "Whether this data is visible to the assigned provider"]
  created_at timestamp(6)
  updated_at timestamp(6)

  Note: "Core table for capturing all patient-reported or observed data, including symptoms, habits, notes, tasks, etc. OMOP-aligned and extensible."
}

Table drug_exposure {
  drug_exposure_id int [pk, increment, note: "Primary key of the drug exposure record"]
  person_id int [ref: > person.person_id, note: "The patient using the medication"]
  drug_concept_id int [ref: > concept.concept_id, note: "The prescribed or used drug (mapped to a concept)"]
  drug_exposure_start_date date [note: "Date when the medication regimen begins"]
  drug_exposure_end_date date [null, note: "Optional end date for the medication regimen"]
  stop_reason varchar(255) [null, note: "Optional reason for stopping the medication"]
  quantity int [note: "Total number of units prescribed or dispensed (e.g., 30 pills)"]
  interval_hours int [null, note: "Interval between doses in hours (e.g. 8 = every 8 hours)"]
  dose_times time[] [null, note: "Fixed intake times (e.g. ['08:00', '20:00'])"]
  sig text [null, note: "Free-text instructions for the patient (e.g. '1x ao dia em jejum')"]
  created_at timestamp(6) [note: "Record creation timestamp"]
  updated_at timestamp(6) [note: "Record update timestamp"]

  Note: "Captures medication prescriptions or usage. Supports structured tracking for reminders, notifications, and clinical follow-up. Aligned with OMOP, with local extensions for real-time alerts based on dosage schedule."
}

Table visit_occurrence {
  visit_occurrence_id int [pk, increment, note: "Primary key for the visit record"]
  person_id int [ref: > person.person_id, note: "The patient involved in the visit"]
  provider_id int [ref: > provider.provider_id, null, note: "The healthcare professional attending the visit (optional)"]
  care_site_id int [ref: > care_site.care_site_id, null, note: "Healthcare location where the visit occurred (optional)"]
  visit_date timestamp(6) [note: "Start date and time of the visit"]
  visit_end_date timestamp(6) [null, note: "End date and time of the visit (optional)"]
  observations text [null, note: "Free-text field for summarizing key points or outcomes of the visit"]
  created_at timestamp(6) [note: "Timestamp of record creation"]
  updated_at timestamp(6) [note: "Timestamp of last update"]

  Note: "Stores scheduled or completed interactions between a patient and a healthcare professional. Can be used for consultations, check-ins, or assessments. Extensible to multiple providers and care sites."
}

Table emergency_message {
  emergency_message_id int [pk, increment, note: "Primary key for the emergency message"]
  person_id int [ref: > person.person_id, note: "Patient who triggered the emergency alert"]
  message text [note: "Free-text description of the emergency situation"]
  created_at timestamp(6) [note: "Timestamp when the emergency was reported"]
  updated_at timestamp(6) [note: "Last update time (optional edits or resolutions)"]

  Note: "Represents an urgent message initiated by the patient to signal psychological distress or critical situations. Can be shared with one or more providers."
}

Table emergency_provider {
  provider_id int [ref: > provider.provider_id, note: "Professional assigned to respond to the emergency"]
  emergency_message_id int [ref: > emergency_message.emergency_message_id, note: "Emergency message associated with the provider"]
  acknowledged boolean [default: false, note: "Whether the provider acknowledged the emergency"]
  response_note text [null, note: "Optional note or summary written by the provider in response"]

  Note: "Many-to-many relationship linking emergency alerts to responsible or notified healthcare professionals. Tracks acknowledgment and responses to urgent cases."
}
